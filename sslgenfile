#!/usr/bin/mksh
# Script by Ypnose - http://ypnose.org
# You need openssl & ca-certificates in order to use this script

FCRT="$HOME/cert.pem"
SRCRT="/usr/share/ca-certificates/mozilla/"
ADCRT="legtux.org"
DLCRT="http://www.autistici.org/static/certs/ca.crt
 http://www.cacert.org/certs/root.crt"
# For every entry in DLCRT, you need to write a SHA1 fingerprint, in the array.
set -A SUMCRT -- "D4:A8:07:24:0C:26:B6:D7:9D:AA:CC:CA:77:BA:3A:27:AE:0C:B5:35" \
 "13:5C:EC:36:F4:9C:B8:E9:3B:1A:B2:70:CD:80:88:46:76:CE:8F:33"

if [[ $1 = "-h" ]]; then
	print "usage: sslgenfile [-h] <cert_file>.pem"
	exit 0
fi

if [[ -n $1 ]]; then
	unset FCRT
	FCRT="$1"
fi

[[ -f $FCRT ]] && rm -f "$FCRT"
if [[ -d $SRCRT ]]; then
	print "Generated with sslgenfile - $(LC_ALL=C date)\n" > "$FCRT"
	print "Merging certificates from $SRCRT"
	for f in "${SRCRT}/*.crt"; do
		cat $f >> "$FCRT"
	done
fi
if [[ -n $ADCRT ]]; then
	print "Saving additional certificate(s) from:"
	for i in $ADCRT; do
		print " * $i"
		print -n | openssl s_client -connect ${i}:443 2>&1 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' >> "$FCRT"
	done
fi
if [[ -n $DLCRT ]]; then
	n=0
	TF="$(mktemp /tmp/ssl.XXXXXXXXXX)"
	print "Downloading certificate(s) from:"
	for i in $DLCRT; do
		print -n " * ${i#*//}"
		curl -Ss ${i} -o $TF
		FING="$(openssl x509 -in $TF -fingerprint -sha1 -noout | sed 's/.* //;s/Fingerprint=//')"
		if [[ $FING != ${SUMCRT[n]} ]]; then
			print -u2 " ... Fingerprint doesn't match."
			(( n++ ))
			continue
		else
			print " ... Fingerprint is OK"
			(( n++ ))
		fi
		sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' $TF >> "$FCRT"
	done
fi
print "Certificates saved to $FCRT"
[[ -n $(find "$FCRT" -type f ! -perm 400) ]] && chmod 400 "$FCRT"

exit
