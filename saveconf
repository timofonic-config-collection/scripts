#!/bin/sh
#   Script by Ypnose  <linuxien[AT]legtux[DOT]org>
#   This script saves core config files for Archlinux in the specified folder
#   If you want to use it, you may change $DIRS and files accordingly!
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#  
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#   MA 02110-1301, USA.
#

#DIR=/mnt/USB1/CONFSAVE
DIR=$HOME/Documents/test
TARGZ=1

usage() {
	printf "%s\n" "Usage: ${0##*/} [OPTARG]"
	printf "%s\n" "  OPTARG:"
	printf "%s\n\n" "    -o 	Overwrite existing tar.gz archive or directory"
}

if [ "$1" = -h ]; then
	usage
	exit 1
fi 

if [ -d "$DIR" ]; then
	printf "\e[0;32m%s\n\e[0;33m%s\e[0m\n" "The directory exists. It will be used for your configs." "Starting backup..."
else
	printf "\e[0;31m%s\e[0m\n" "The directory does not exist. You should change DIR location!"
	exit 1
fi

# It counts existing archives and delete the oldest file if the folder, contains more than (or equal) 5 files
if [ "$((TARGZ))" -eq 1 ] && [ "$(find $DIR -type f -iname "CONFS*.tar.gz" | wc -l)" -ge 5 ]; then
	printf "\e[0;31m%s\n%s\e[0m\n" "The directory contains more than 5 archives!" "Deleting the oldest archive"
	cd $DIR
	FILDEL=$(ls -1t | tail -1)
	rm -i $FILDEL
fi

DAT=$(date "+%d-%m-%Y")
NEWFOL="$DIR/CONFS-$DAT"

# With -o argument, it overrides an existing folder / archive
if [ -d "$NEWFOL" ] && [ "$1" = "-o" ]; then
	printf "\e[0;31m%s\e[0m\n" "Overwriting the existing folder!"
	rm -R "$NEWFOL"
fi

if [ -e "$DIR/CONFS-$DAT.tar.gz" ] && [ "$1" = "-o" ]; then
	printf "\e[0;31m%s\e[0m\n" "Overwriting the existing archive!"
	rm "$DIR/CONFS-$DAT.tar.gz"
fi

if [ -d "$NEWFOL" ] || [ -e "$DIR/CONFS-$DAT.tar.gz" ]; then
	printf "\e[0;31m%s\e[0m\n" "WARNING: You already synchronised your files today!"
	exit
else
	mkdir -p "$NEWFOL"
fi

#-------------------------------------
#Filesystem
BOOTF="/boot/syslinux/syslinux.cfg"
ETCF="/etc/fstab /etc/issue /etc/locale.conf /etc/mkinitcpio.conf /etc/mkinitcpio-custom.conf /etc/nanorc /etc/wpa_supplicant.conf"
PACF="/etc/pacman.conf /etc/pacman.d/mirrorlist"
NETF="/etc/network.d/Madbox /etc/conf.d/netcfg"
MODF="/etc/modprobe.d/modprobe.conf"
XORGF="/etc/X11/xorg.conf.d/10-keyboard.conf /etc/X11/xorg.conf.d/20-nvidia.conf"
NANF="/usr/share/nano/conf.nanorc /usr/share/nano/pkgbuild.nanorc"
#User
BASHF="$HOME/.bashrc $HOME/.bash_profile"
MISCF="$HOME/.Xresources $HOME/.dir_colors $HOME/.gitconfig $HOME/.xinitrc $HOME/OUT.out $HOME/.config/user-dirs.conf $HOME/.config/fontconfig/fonts.conf"
FIREF=$(find $HOME/.mozilla -type d -iname "*.default")

#Option: comment $OPTF if you don't need it.
OPTF="$HOME/.bin/ $HOME/.config/geany/colorschemes/ $HOME/.fonts/ $HOME/.log/ $HOME/.moc/ $HOME/.themes/ $HOME/Documents/Font/ $HOME/Documents/Pics/ $HOME/Documents/bookmarks.html $HOME/Documents/Certificate_Mad.p12"
SHF=".ssh/"
ARCF="Builds"
#-------------------------------------

#Message
printf "\e[0;33m%s\e[0m => %s\n" "The following files will be copied" "$BOOTF $ETCF $PACF $NETF $MODF $XORGF $NANF $BASHF $MISCF"

#Copy core files
for FILES in "$BOOTF $ETCF $PACF $NETF $MODF $XORGF $NANF $BASHF $MISCF"
	do
		printf "\e[0;33m%s\n"
		cp -v $FILES $NEWFOL
done

if [ -n "$FIREF" ] && [ -d "$FIREF/" ]; then
	cp $FIREF/prefs.js $NEWFOL
	printf "\n\e[0;32m%s\e[0m\n" "Firefox profile found!"
		if [ -d "$FIREF/searchplugins" ]; then
			mkdir -p $NEWFOL/FFox
			cp -r $FIREF/searchplugins $NEWFOL/FFox/searchplugins
		fi
else
	printf "\n\e[0;31m%s\e[0m\n" "No Firefox profile found!"
fi

#Packages list
printf "%s - %s packages\n\n" "$DAT" "$(pacman -Q | wc -l)" > $NEWFOL/pacman_pkgs.out
pacman -Q >> $NEWFOL/pacman_pkgs.out

#Option
if [ -n "$OPTF" ]; then
	printf "\e[0m%s\n" "Optional files will be saved!"
	mkdir -p $NEWFOL/OPT
	cp -r $OPTF $NEWFOL/OPT
else
	printf "\e[0m%s\n" "No optional files defined!"
fi

if [ -n "$SHF" ]; then
	cd $HOME
	tar -czf $NEWFOL/SSH.tar.gz $SHF
fi

if [ -n "$ARCF" ] && [ -d "$HOME/Builds" ]; then
	cd $HOME
	tar -czf $NEWFOL/Builds.tar.gz $ARCF
fi

printf "\n\e[0mThe script saved \e[0;32m%d\e[0m files\n\n" "$(find $NEWFOL -type f | wc -l)"

if [ "$((TARGZ))" -eq 1 ]; then
	cd $DIR
	tar -czf "CONFS-$DAT".tar.gz "CONFS-$DAT"
	printf "\e[0;32m%s\e[0m\n" "Archive has been successfully created"
	rm -R $NEWFOL
else
	printf "\e[0;33m%s\e[0m\n" "Archive option turned off!"
fi

printf "\e[0;32m%s\e[0m\n" "Done."
exit 0
